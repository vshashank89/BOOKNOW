//////////////////////////////////////
// Header


// Logo
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

//Search 
.search {

    //background-color: orangered;
    flex: 0 0 40%; // since its a flex item we set its width using flex. (flex-basis)

    display: flex;
    align-items: center;
    justify-content: center;

    position: relative;

    @media only screen and (max-width:$bp-smallest) {
        order: 1;
        flex: 0 0 100%;
        background-color: var(--color-grey-light-2); // this is to get rid of weird looking search bar with rounded corners and not centered.
    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__input:placeholder-shown + &__suggestion-list  {
        top: 0; 
        opacity: 0;
        visibility: hidden;
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); // to change color of an svg icon in css we use fill prop.
    }

    &__suggestion-list {
        list-style: none;
        position: absolute;
        top: 100%;
        left: .5rem;
        width: 100%;
        opacity: 1;
        visibility: visible;
        transition: all .3s;

        background-color: #fff;
        z-index: 10;

    }

    &__suggestion-name {
        padding: 1rem 0 .5rem 2rem;
        position: relative;
        cursor: pointer;

        &:hover {
            background-color: var(--color-grey-light-2);
        }
    }

    &__suggestion-name::before {
        content: "";
        display: inline-block;
        height: 1.5rem;
        width: 1.5rem;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

       /*background-image: url(../img/magnifying-glass.svg);
        background-size: cover;*/

        background-color: var(--color-grey-dark-3);
        -webkit-mask-image: url(../img/magnifying-glass.svg);
        mask-image: url(../img/magnifying-glass.svg);
        -webkit-mask-size: cover;
        mask-size: cover;

    }

}


//user-nav
.user-nav {

    align-self: stretch;

    //background-color: yellowgreen;
    display: flex;
    align-items: center;

    & > * {  // direct-child selector selects the two &__icon-box es and &__user
        padding: 0 2rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        height: 100%;
    }
    
    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);

    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.2rem;
        background-color: var(--color-primary);
        border-radius: 50%;
        color: #fff;

        position: absolute;
        top: 1.5rem;
        right: 1.6rem;

        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__msg-icon:hover &__message-box {
        right: 0;
        opacity: 1;
        visibility: visible;
    }

    &__message-box {
        width: 20rem;
        z-index: 20;
        list-style: none;
        position: absolute;
        top: 100%;
        right: 100%;
        background-color: #fff;
        
        opacity: 0;
        visibility: hidden;

        transition: all .3s;
    }

    &__message {
        padding: .92rem;
        background-color: lavender;

        &:not(:last-of-type) {
            border-bottom: 3px solid white;
        }
    }

    &__msg-content {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__frnd-pic {
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        //margin-right: 1rem;
    }

    &__pics {
        box-sizing: content-box;
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;
        
        &:not(:last-of-type){
            margin-right: -3.5rem;
        }
        
    }

    &__msg-text {
        margin-left: 1rem;
        color: var(--color-primary-light);
    }

    &__user {
        position: relative;
    }

    &__user:hover &__user-menu {
        top: 100%;
        opacity: 1;
        visibility: visible;
    }

    &__user-menu {
        position: absolute;
        top:50%;
        left:0;
        width: 100%;
        z-index: 20;
        list-style: none;
        opacity: 0;
        visibility: hidden;
        transition: all .3s;
        overflow: hidden;

        background-color: #fff;
    }

    &__user-option {
        font-size: 1.5rem;
        text-align: center;
        text-transform: uppercase;
        color: var(--color-grey-dark-3);
        padding: 1rem 0;
        background-image: linear-gradient( 295deg , transparent 0% , transparent 50% , var(--color-primary) 50%);
        background-size: 0%;
        background-repeat: no-repeat;
        transition: all .4s;

        &:hover {
            color: #fff;
            background-size: 210%;
        }
    }

    &__user-photo {
        height: 5rem;
        width: 5rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

}


//////////////////////////////////////
// Side Navigation

.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media  only screen and (max-width:$bp-medium) {
        display: flex;
        margin: 0;
    }

    &__item {
        
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media  only screen and (max-width:$bp-medium) {
                margin-bottom: 0;
            }

        }

        @media  only screen and (max-width:$bp-medium) {
            flex: 1;
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        
        transition: transform .2s , 
                    background-color .1s ,
                    width .4s cubic-bezier(1,0,0,1) .2s; // multiple transition properties 
    }

    &__item:hover::before ,
    &__item--active::before {  // this is for the active Hotel item in the list
        transform: scaleY(1);
        width: 100%;
    }
    
    &__item:active::before {
        background-color: var(--color-primary-light) ;
    }

    &__link {
        
        &:link ,&:visited {
            text-transform: uppercase;
            text-decoration: none;
            color: var(--color-grey-light-1);
            padding: 1.5rem 3rem;
            display: block;
            position: relative;  // this is because z-index only work if there is specified position
            z-index: 10; 

            display: flex;
            align-items: center;

            @media  only screen and (max-width:$bp-medium) {
                justify-content: center;
                padding: 2rem;
            }

            @media only screen and (max-width:$bp-small) {
                flex-direction: column;
                padding: 1.5rem .5rem;
            }
        }
    }

    &__icon {
        height: 1.75rem;
        width: 1.75rem;
        margin-right: 2rem;
        fill: currentColor; // currentColor is just the color of the current element or the parent element.
        
        @media only screen and (max-width:$bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            height: 1.5rem;
            width: 1.5rem;
        }
    }

}

// Legal text
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    padding: 2rem;
    text-align: center;

    @media  only screen and (max-width:$bp-medium) {
        display: none;
    }
}

.copy {
    display: inline-block;
    cursor: pointer;
    text-transform: uppercase;
    transition: all .2s;
    backface-visibility: hidden;

    &:hover {
        color: var(--color-primary);
        background-color: rgba(black , .9);
        box-shadow: 0 1rem 2rem rgba(black , .5);
        transform: rotate(4deg) scale(1.2);
    }
}

//////////////////////////////////////
// Hotel-view gallery
.gallery {

    display: flex;
    overflow: hidden;

    &__item {
        height: 100%;
        width: 100%;
        overflow: hidden;
        position: relative;
        
    }

    &__item:hover &__caption {
        opacity: 1;
        color: var(--color-primary-light);
        transform: translate(-50% , -50%);
    }

    &__item:hover &__photo {
        transform: scale(1.0);
        filter: blur(2px);
    }

    
    &__caption {
        font-size: 2.25rem;
        text-align: center;
        opacity: 0;
        text-transform: uppercase;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50% , 40%);
        transition: all .2s;
    }

    &__photo {
        height: 100%;
        width: 100%;
        display: block; // images should always be block | inline-block.
        transform: scale(1.4);
        transition: all .2s;
    }
} 

// OVERVIEW
.overview {

    display: flex;
    border-bottom: var(--line);
    align-items: center; // to align flexitems along the cross-axis

    
    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width:$bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }

        /*@media only screen and (max-width:$bp-smallest) {
            padding: 1rem 1rem;
        }*/
        
    }

    &__stars {
        //flex: 1; instead of spreding out the element to occupy as much space it can , we use a powerful-trick in flexbox i.e
        margin-right: auto; // To create space in between , we use this important trick in flexbox by setting margin:auto;
        display: flex;

        @media only screen and (max-width:$bp-smallest) {
            margin-left: -1rem;
        }
    }

    &__icon-star ,
    &__icon-location {

        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;

        align-self: stretch;

        display: flex; // to center them vert and horiz
        flex-direction: column;
        justify-content: center;
        align-items: center;

        @media only screen and (max-width:$bp-small) {
            padding: 0 1.5rem;
            margin-left: 1.5rem;
        }

    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width:$bp-small) {
            font-size: 1.8rem;
            //margin-bottom: 0;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width:$bp-small) {
            font-size: .5rem;
        }
    }

}


// BUTTON INLINE
.btn-inline {
    //font-weight: 600;
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block; 
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }

    &:focus {  // :focus pseudoclass is for <button> element , :active is for link (<a>) element.
        outline: none;
        animation: pulsate 1s infinite;
    }

}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow:0 1rem 4rem rgba($color: #000000, $alpha: .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}


//////////////////////////////////////
// PARAGRAPH
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}


// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;

    &__item {
        flex: 0 0 50%;
        margin-bottom: .7rem; // 7px
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .5rem;
        

        // Older browsers we use this technique
        background-image: url(../img/chevron-thin-right.svg); // using this we cant change the color of svg icon . 
        background-size: cover;

        // New Browsers we use mask technique. So we write a feature query here 
        @supports (-webkit-mask-image: url()) or (mask-image: url()) {

            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);  // masking image only works when we define background-color.
            mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover; // similar to bgsize set to cover so that the image occupies the space.
            mask-size: cover;

            background-image: none; // Since in chrome bgimg prop gets applied. so we have to remove it.
        }
    }
}


// RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);
    
    display: flex;
    align-items: center;

    &__count {
        margin-right: auto; // this powerful tool to push the &__friends all the way to the right.
    }

    &__friends {
        display: flex; // so that the photos stay side-by-side no matter of width. This is probably the best fix for this problem. 
    }

    &__photo {
        box-sizing: content-box; // this is because we want height and width of photo to not include padding and border. 
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;
        
        &:not(:last-child) {
        margin-right: -2rem; // this is for the oerlapping effect of the images on each other except the :last-child. 
        }

    }
}

//////////////////////////////////////
// REVIEWS
.review {

    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden; // because the quotes is overflowing out of the box.

    @media  only screen and (max-width:$bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        //padding-bottom: 1rem;
        margin-bottom: 2rem;
        //border-bottom: var(--line);

        z-index: 10;
        position: relative; // so that the text is above the quotes and z-index only works when position is set to the element. 
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto;
    }

    &__user-name {
        text-transform: uppercase;
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    

    &__rating {
        font-size: 2.25rem;
        font-weight: 300;
        color: var(--color-primary);
    }

    &::before {
        content: "\201C";  // this is how we define character entities or symbols in CSS.
        color: var(--color-grey-light-2);
        font-size: 20rem;
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1; // if the line-height not set to one the element occupies a huge height overflows out of the review component.
        font-family: sans-serif;
        z-index: 1;
    }
    
}

//////////////////////////////////////
// CTA (call to action)
.cta {
    text-align: center;
    padding: 3.5rem 0;

    @media  only screen and (max-width:$bp-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

//////////////////////////////////////
// BUTTON
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border: none;
    border-radius: 100px;
    //padding: 2.5rem;
    background-image: linear-gradient(to right , var(--color-primary-light) , var(--color-primary-dark));
    color: #fff;
    cursor: pointer;

    position: relative;
    overflow: hidden; // this is so that the btn__invisible is hidden.

    & > * { // Direct child selector
        display: inline-block;
        width: 100%;
        height: 100%; // This is so that the element doesnt loose its height and width.
        transition: all .2s;
    }

    &__visible {

        padding: 2rem 7.5rem;

    }

    &__invisible {

        padding: 2rem 0;
        position: absolute;
        top: -100%;
        left: 0;

    }

    &:hover &__visible {
        transform: translateY(100%);
    }

    &:hover &__invisible {
        top: 0;
    }

    &:hover {
        background-image: linear-gradient(to left , var(--color-primary-light) , var(--color-primary-dark)) ;
        // Note : transition doesnt work background-image , so doesnt work for gradients as well. 
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
    
}